# Configuration options, used by release

# The name that is advertised.
BLUETOOTH_NAME=CRWN

# Firmware and bootloader version will be overwritten with information from the files
# source/VERSION and source/bootloader/VERSION 
FIRMWARE_VERSION=undefined
BOOTLOADER_VERSION=undefined

# There is no HARDWARE_BOARD defined. The same firmware runs on all our hardware. Different functionality is
# enabled depending on the UICR settings that are written in the factory.

# The definition DEFAULT_HARDWARE_BOARD is the default for hardware that has no UICR value written. 
# TODO: This macro is deprecated. It will be removed in the future. 
DEFAULT_HARDWARE_BOARD=ACR01B2C

# Do not add a reset counter to the name
CHANGE_NAME_ON_RESET=0

# Compile the mesh code
BUILD_MESHING=1

# Enable the mesh code
MESHING=1

# Advertise packets in iBeacon format.
IBEACON=1

# The Crownstone is OFF by default. 
# TODO: This macro is deprecated. It will be removed in the future. 
DEFAULT_ON=0

# The interval scanner is disabled by default. 
INTERVAL_SCANNER_ENABLED=0

# The dimmer is enabled by default.
PWM_ENABLE=1

# The iBeacon advertisement packet parameters contains the proximity UUID, MAJOR, MINOR, AND RSSI value.
BEACON_UUID="a643423e-e175-4af0-a2e4-31e32f729a8a"
BEACON_MAJOR=0
BEACON_MINOR=0
BEACON_RSSI=0xC4

# Encryption is enabled by default (valid for characteristics and advertisements)
ENCRYPTION=1

# The number of vendor specific services are kept very small (larger values increase RAM_R1_BASE)
MAX_NUM_VS_SERVICES=2

# The control, configuration, and state characteristics are enabled by default.
CHAR_CONTROL=1
CHAR_CONFIGURATION=1
CHAR_STATE=1

# The "master" buffer is used to store larger data structs. It will be only allocated once.
# It should not be larger than BLE_GATTS_VAR_ATTR_LEN_MAX (512 byte).
MASTER_BUFFER_SIZE=300

# There is no UART output in release.
SERIAL_VERBOSITY=SERIAL_NONE

# Serial is disabled for printing output (will remove corresponding files at compile time).
CS_SERIAL_ENABLED=0

# Enable the binary protocol over serial
CS_UART_BINARY_PROTOCOL_ENABLED=1

# The nRF modules can also spit out debug info. Disable that as well.
CS_SERIAL_NRF_LOG_ENABLED=0

# The pin if it would be enabled
CS_SERIAL_NRF_LOG_PIN_TX=6

# The nRF series we compile for.
NRF_SERIES=NRF52

# Default transmission power is maximum: +4 dBm
TX_POWER=4

# Default advertisement interval, in units of 0.625 msec. Value 160 corresponds to 10 msec.
ADVERTISEMENT_INTERVAL=160

# Maximum chip temperature in degrees celsius. After this thermal protection kicks in.
MAX_CHIP_TEMP=75

# Time (ms) to wait with during booting
BOOT_DELAY=400

# Durations for the scanner (msec).
SCAN_DURATION=2000
SCAN_BREAK_DURATION=7000

# Enable RSSI measurements when connected.
ENABLE_RSSI_FOR_CONNECTION=1

# Connection alive timeout (msec). When no control commands are received within this period, the connection is closed.
CONNECTION_ALIVE_TIMEOUT=20000

# This is the directory where the cross-compiler resides
COMPILER_PATH=

# The compiler type
COMPILER_TYPE=arm-none-eabi-

# The JLink utility (when using the Segger to flash the nRF)
JLINK=/usr/bin/JLinkExe

# The JLink utilty that can be used with gdb
JLINK_GDB_SERVER=/usr/bin/JLinkGDBServer

# The device can be nRF51822 or nRF52832_xxAA
DEVICE=nRF52832_xxAA

# Use SoftDevice (setting to 0 is untested)
# [18.07.16] do we really want this flag still? Most of our code depends on the
# softdevice being present. disabling this flag won't work without major code changes!!
NRF51_USE_SOFTDEVICE=1

# the directory with /Source and /Include subdirectories from the Nordic SDK
NRF5_DIR=

# The nordic sdk version
NORDIC_SDK_VERSION=15

# Starting with SoftDevice S110 v7 there is no separate UICR section
SOFTDEVICE_NO_SEPARATE_UICR_SECTION=1

# Bootloader address without debug. The size 0x8000 is to have some space reserved for further bootloader growth.
BOOTLOADER_START_ADDRESS=0x00076000
BOOTLOADER_LENGTH=0x8000

# DFU is using the first 4 bytes in the UICR (0x10001080) for DFU INIT checks.
UICR_DFU_INDEX=0

# The second 4 bytes in the UICR (0x10001084) stores the hardware board type.
UICR_BOARD_INDEX=1

# The address (in UICR) where the hardware board type is written and read
HARDWARE_BOARD_ADDRESS=0x10001084

# The Softdevice used
SOFTDEVICE_MAJOR=6
SOFTDEVICE_MINOR=1
SOFTDEVICE_SERIES=132
SOFTDEVICE=s132_nrf52_6.1.1

# The application start address (is after the softdevice)
APPLICATION_START_ADDRESS=0x00026000

# The maximum size of the application. On our chip with 512kB FLASH this is 0x80000 - 0x26000 = 0x5A000
APPLICATION_LENGTH=0x4B000

# Start of RAM for the application
RAM_R1_BASE=0x20002380

# Amount of RAM for the application (0x20010000 - RAM_R1_BASE).
RAM_APPLICATION_AMOUNT=0xDC80

# TODO: Fix.
# WARNING, WARNING
# The following values are not used...
# Adjust them in $BLUENET_DIR/include/third/nrf/generic_gcc_nrf52.ld for now! (adjusted version of $NRF5_DIR/config/nrf52832/armgcc/generic_gcc_nrf52.ld)
ATTR_TABLE_SIZE=0x500
HEAP_SIZE=20000
